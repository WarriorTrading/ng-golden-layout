{"version":3,"file":"warriortrading-ng-golden-layout.js.map","sources":["ng://@warriortrading/ng-golden-layout/lib/config.ts","ng://@warriortrading/ng-golden-layout/lib/state.ts","ng://@warriortrading/ng-golden-layout/lib/golden-layout.service.ts","ng://@warriortrading/ng-golden-layout/lib/golden-layout.component.ts","ng://@warriortrading/ng-golden-layout/lib/module.ts","ng://@warriortrading/ng-golden-layout/lib/multiwindow-service.ts"],"sourcesContent":["import { InjectionToken, Type } from '@angular/core';\nimport * as GoldenLayout from 'golden-layout';\n\nexport interface ComponentConfiguration {\n  /**\n   * Name used to register compoent with GoldenLayout.\n   */\n  componentName: string;\n\n  /**\n   * Angular component type.\n   */\n  component: Type<any>;\n}\n\nexport interface GoldenLayoutConfiguration {\n  /**\n   * Array of component configurations.\n   */\n  components: ComponentConfiguration[];\n\n  /**\n   * Initial component layout configuration.\n   */\n  defaultLayout: GoldenLayout.Config;\n\n}\n\nexport const GoldenLayoutConfiguration = new InjectionToken('GoldenLayoutConfiguration');\n","import { InjectionToken, Provider } from '@angular/core';\n\nexport const GoldenLayoutStateStore = new InjectionToken('GoldenLayoutStateStore');\n\nexport interface StateStore {\n  writeState(state:any): void;\n\n  loadState(): Promise<any>\n}\n\nexport const DEFAULT_LOCAL_STORAGE_STATE_STORE_KEY = '$ng-golden-layout-state';\n\nexport class LocalStorageStateStore implements StateStore {\n  constructor(private readonly key: string) {}\n\n  public writeState(state: any): void { \n    localStorage.setItem(this.key, JSON.stringify(state));\n  }\n\n  public loadState(): Promise<any> {\n    const state = localStorage.getItem( this.key );\n    return state \n      ? Promise.resolve(JSON.parse(state)) \n      : Promise.reject(`No state found using key: ${this.key}`);\n  }\n}\n\nexport function DEFAULT_LOCAL_STORAGE_STATE_STORE_FACTORY() {\n  return new LocalStorageStateStore(DEFAULT_LOCAL_STORAGE_STATE_STORE_KEY);\n}\n\nexport const DEFAULT_LOCAL_STORAGE_STATE_STORE = new LocalStorageStateStore(DEFAULT_LOCAL_STORAGE_STATE_STORE_KEY);\n\nexport const DEFAULT_LOCAL_STORAGE_STATE_STORE_PROVIDER: Provider = {\n  provide: GoldenLayoutStateStore,\n  useFactory: DEFAULT_LOCAL_STORAGE_STATE_STORE_FACTORY\n};\n","import { Inject, Injectable, Type, Optional } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as GoldenLayout from 'golden-layout';\nimport { GoldenLayoutConfiguration, ComponentConfiguration } from './config';\nimport { GoldenLayoutStateStore, StateStore, LocalStorageStateStore } from './state';\n\n/**\n * golden-layout component initialization callback type.\n */\nexport interface ComponentInitCallback extends Function {\n  (container: GoldenLayout.Container, componentState: any): void;\n}\n\nexport interface ComponentInitCallbackFactory {\n  createComponentInitCallback(component: Type<any>): ComponentInitCallback;\n}\n\n@Injectable()\nexport class GoldenLayoutService {\n  private _layout: GoldenLayout = null;\n\n  constructor(@Inject(GoldenLayoutConfiguration) public readonly config: GoldenLayoutConfiguration,\n              @Optional() @Inject(GoldenLayoutStateStore) private readonly stateStore: StateStore) {}\n\n  public initialize(goldenLayout: GoldenLayout, componentInitCallbackFactory: ComponentInitCallbackFactory) {\n    this._layout = goldenLayout;\n    this.config.components.forEach((componentConfig: ComponentConfiguration) => {\n      const componentInitCallback = componentInitCallbackFactory.createComponentInitCallback(componentConfig.component);\n      goldenLayout.registerComponent(componentConfig.componentName, componentInitCallback);\n    });\n\n    if (this.stateStore) {\n      (<GoldenLayout.EventEmitter>(<any>goldenLayout)).on('stateChanged', () => {\n        this._saveState(goldenLayout);\n      });\n    }\n  }\n\n  private _saveState(goldenLayout: GoldenLayout): void {\n    if (this.stateStore && goldenLayout.isInitialised) {\n      try {\n        this.stateStore.writeState(goldenLayout.toConfig());\n      } catch(ex) {\n        // Workaround for https://github.com/deepstreamIO/golden-layout/issues/192\n      }\n    }\n  }\n\n  public getState(): Promise<any>{\n    if (this.stateStore) {\n      return this.stateStore.loadState().catch(() => {\n        return this.config.defaultLayout;\n      });\n    }\n\n    return Promise.resolve(this.config.defaultLayout);\n  }\n\n  public getRegisteredComponents(): ComponentConfiguration[] {\n    return this.config.components;\n  }\n\n  public getRegisteredComponent(name: string): ComponentConfiguration {\n    for (let index = 0; index < this.config.components.length; index++) {\n      const component = this.config.components[index];\n      if (component.componentName === name) {\n        return component;\n      }\n    }\n    return null;\n  }\n\n  public childOfRoot(): GoldenLayout.ContentItem {\n    if (this._layout == null || this._layout.root == null || this._layout.root.contentItems == null || this._layout.root.contentItems.length === 0) {\n      throw new Error(\"no child in root \");\n    }\n    return this._layout.root.contentItems[0];\n  }\n\n  public addStack(parent: GoldenLayout.ContentItem, opt?: GoldenLayout.ItemConfig): GoldenLayout.ContentItem {\n    \n    if (parent == null) {\n      throw new Error(\"cannot add stack to null item\");\n    }\n\n    if (opt != null && opt.id != null && parent.getItemsById(opt.id).length > 0) {\n      throw new Error(`there already exists a item with same id: ${opt.id} in parent!`);\n    }\n    \n    // create stack item\n    const stack = this._layout.createContentItem(Object.assign({type: 'stack'}, opt as any)) as any;\n\n    parent.addChild(stack);\n    return stack;\n  }\n\n  public addComponent(parent: GoldenLayout.ContentItem, comp: ComponentConfiguration, opt?: GoldenLayout.ItemConfig) : GoldenLayout.ContentItem {\n    \n    if (parent == null) {\n      throw new Error(\"cannot add component to null item\");\n    }\n\n    if (opt != null && opt.id != null && parent.getItemsById(opt.id).length > 0) {\n      throw new Error(`there already exists a item with same id: ${opt.id} in parent!`);\n    }\n\n    // create content item\n    const content = this._layout.createContentItem(Object.assign({type: 'component', componentName: comp.componentName }, opt as any)) as any;\n\n    parent.addChild(content);\n\n    return content;\n  }\n\n  public currentConfig(): string {\n    return JSON.stringify(this._layout.toConfig(), null, 2)\n  }\n\n  public isChildWindow(): boolean {\n    return !!window.opener;\n  }\n\n  public getRootWindow(): Window {\n    return window.opener || window;\n  }\n}\n","import {\n  isDevMode,\n  ComponentFactoryResolver,\n  HostListener,\n  ViewContainerRef,\n  ElementRef,\n  Component,\n  OnInit,\n  OnDestroy,\n  ApplicationRef,\n  Type,\n  Input,\n  NgZone,\n  InjectionToken,\n  Injector,\n  ViewChild\n} from '@angular/core';\nimport * as GoldenLayout from 'golden-layout';\n\nimport { GlOnResize, GlOnShow, GlOnHide, GlOnTab } from './hooks';\nimport {\n  GoldenLayoutService,\n  ComponentInitCallbackFactory,\n  ComponentInitCallback\n} from './golden-layout.service';\n\nexport const GoldenLayoutContainer = new InjectionToken('GoldenLayoutContainer');\nexport const GoldenLayoutComponentState = new InjectionToken('GoldenLayoutComponentState');\n/**\n * Type guard which determines if a component implements the GlOnResize interface.\n */\nfunction implementsGlOnResize(obj: any): obj is GlOnResize {\n  return typeof obj === 'object' && typeof obj.glOnResize === 'function';\n}\n\n/**\n * Type guard which determines if a component implements the GlOnShow interface.\n */\nfunction implementsGlOnShow(obj: any): obj is GlOnShow {\n  return typeof obj === 'object' && typeof obj.glOnShow === 'function';\n}\n\n/**\n * Type guard which determines if a component implements the GlOnHide interface.\n */\nfunction implementsGlOnHide(obj: any): obj is GlOnHide {\n  return typeof obj === 'object' && typeof obj.glOnHide === 'function';\n}\n\n/**\n * Type guard which determines if a component implements the GlOnTab interface.\n */\nfunction implementsGlOnTab(obj: any): obj is GlOnTab {\n  return typeof obj === 'object' && typeof obj.glOnTab === 'function';\n}\n\nconst COMPONENT_REF_KEY = '$componentRef';\n\n@Component({\n  selector: 'golden-layout-root',\n  styles: [`\n    .ng-golden-layout-root {\n      width:100%;\n      height:100%;\n    }`\n  ],\n  template: `<div class=\"ng-golden-layout-root\" #glroot></div>`\n})\nexport class GoldenLayoutComponent implements OnInit, OnDestroy, ComponentInitCallbackFactory {\n  private goldenLayout: GoldenLayout;\n  private topWindow: Window;\n  private isChildWindow: boolean;\n  private unloaded = false;\n\n  @ViewChild('glroot') private el: ElementRef;\n\n  constructor(private glService: GoldenLayoutService,\n              private viewContainer: ViewContainerRef,\n              private appref: ApplicationRef,\n              private componentFactoryResolver: ComponentFactoryResolver,\n              private ngZone: NgZone,\n              private readonly injector: Injector) {\n    this.topWindow = glService.getRootWindow();\n    this.isChildWindow = glService.isChildWindow();\n    if (this.isChildWindow) {\n      window.document.title = window.document.URL;\n      (console as any).__log = console.log;\n      console.log = this.topWindow.console.log;\n    }\n    if (isDevMode()) console.log(`Create@${this.isChildWindow ? 'child' : 'root'}!`);\n  }\n\n  public ngOnInit(): void {\n    if (isDevMode()) console.log(`Init@${this.isChildWindow ? 'child' : 'root'}!`);\n    let anyWin = this.topWindow as any;\n    if (!this.isChildWindow) {\n      anyWin.__apprefs = [];\n      anyWin.__injector = this.injector;\n    }\n\n    // attach the application reference to the root window, save the original 'tick' method\n    anyWin.__apprefs.push(this.appref);\n    (this.appref as any).__tick = this.appref.tick;\n\n    this.appref.tick = (): void => {\n      for (const ar of (this.topWindow as any).__apprefs) {\n        ar._zone.run(() => ar.__tick());\n      }\n    };\n\n    this.glService.getState().then((layout: any) => {\n      this._createLayout(layout);\n    });\n  }\n\n  public ngOnDestroy(): void {\n    if (isDevMode()) console.log(`Destroy@${this.isChildWindow ? 'child' : 'root'}!`);\n    if (this.isChildWindow) {\n      console.log = (console as any).__log;\n    }\n    this.unloaded = true;\n    // restore the original tick method.\n    // this appens in two cases:\n    // either the window is closed, after that it's not important to restore the tick method\n    // or within the root window, where we HAVE to restore the original tick method\n    this.appref.tick = (this.appref as any).__tick;\n  }\n\n  @HostListener('window:beforeunload')\n  public unloadHandler(): void {\n    if (isDevMode()) console.log(`Unload@${this.isChildWindow ? 'child' : 'root'}`);\n    if (this.unloaded) {\n      return;\n    }\n    this.unloaded = true;\n    if (this.isChildWindow) { // if the top window is unloaded, the whole application is destroyed.\n      const index = (this.topWindow as any).__apprefs.indexOf(this.appref);\n      (this.topWindow as any).__apprefs.splice(index, 1);\n    }\n  }\n\n  private _createLayout(layout: any): void {\n    this.goldenLayout = new GoldenLayout(layout, $(this.el.nativeElement));\n\n    // Register all golden-layout components.\n    this.glService.initialize(this.goldenLayout, this);\n\n    // Initialize the layout.\n    this.goldenLayout.init();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: any): void {\n    if (this.goldenLayout) {\n      this.goldenLayout.updateSize();\n    }\n  }\n\n  public createComponentInitCallback(componentType: Type<any>): ComponentInitCallback {\n    // Can't use an ES6 lambda here, since it is not a constructor\n    const self = this;\n    return function (container: GoldenLayout.Container, componentState: any) {\n      self.ngZone.run(() => {\n        // Create an instance of the angular component.\n        const factory = self.componentFactoryResolver.resolveComponentFactory(componentType);\n        const injector = self._createComponentInjector(container, componentState);\n        const componentRef = self.viewContainer.createComponent(factory, undefined, injector);\n\n        // Bind the new component to container's client DOM element.\n        container.getElement().append($(componentRef.location.nativeElement));\n        self._bindEventHooks(container, componentRef.instance);\n        container.on('destroy', () => {\n          $(componentRef.location.nativeElement).remove();\n          componentRef.destroy();\n        });\n      });\n    };\n  }\n\n  /**\n   * Creates an injector capable of injecting the GoldenLayout object,\n   * component container, and initial component state.\n   */\n  private _createComponentInjector(container: GoldenLayout.Container, componentState: any): Injector {\n    return Injector.create([\n      {\n        provide: GoldenLayoutContainer,\n        useValue: container\n      },\n      {\n        provide: GoldenLayoutComponentState,\n        useValue: componentState\n      },\n      {\n        provide: GoldenLayout,\n        useValue: this.goldenLayout\n      },\n    ], this.injector);\n  }\n\n  /**\n   * Registers an event handler for each implemented hook.\n   * @param container Golden Layout component container.\n   * @param component Angular component instance.\n   */\n  private _bindEventHooks(container: GoldenLayout.Container, component: any): void {\n    if (implementsGlOnResize(component)) {\n      container.on('resize', () => {\n        component.glOnResize();\n      });\n    }\n\n    if (implementsGlOnShow(component)) {\n      container.on('show', () => {\n        component.glOnShow();\n      });\n    }\n\n    if (implementsGlOnHide(component)) {\n      container.on('hide', () => {\n        component.glOnHide();\n      });\n    }\n\n    if (implementsGlOnTab(component)) {\n      container.on('tab', (tab) => {\n        component.glOnTab(tab);\n      });\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GoldenLayoutConfiguration } from './config';\nimport { GoldenLayoutService } from './golden-layout.service';\nimport { GoldenLayoutComponent } from './golden-layout.component';\n\n@NgModule({\n  declarations: [GoldenLayoutComponent],\n  exports: [GoldenLayoutComponent],\n  imports: [CommonModule]\n})\nexport class GoldenLayoutModule {\n  public static forRoot(config: GoldenLayoutConfiguration): ModuleWithProviders {\n    return {\n      ngModule: GoldenLayoutModule,\n      providers: [\n        GoldenLayoutService,\n        { provide: GoldenLayoutConfiguration, useValue: config }\n      ]\n    };\n  }\n}\n","export function MultiWindowInit(): void {\n  if (!window.opener) {\n    (window as any).__services = new (window as any).Map();\n    (window as any).__serviceConstructors = new (window as any).Map();\n  }\n}\n\nexport type Constructor<T> = {\n  new (...args: any[]): T;\n};\n\nexport function MultiWindowService<T>() {\n  return function (constructor: Constructor<T>): Constructor<T> {\n    const constr = constructor as any;\n    return ((function(...args: any[]): T {\n      const rootWindow = (window.opener || window) as any;\n      const hasInstance = rootWindow.__services.has(constr.name);\n      if (!hasInstance) {\n        const storedConstr = rootWindow.__serviceConstructors.get(constr.name) || constr;\n        rootWindow.__services.set(constr.name, new storedConstr(...args));\n      }\n      return rootWindow.__services.get(constr.name);\n    }) as any) as Constructor<T>;\n  };\n}\n"],"names":["tslib_1.__values"],"mappings":"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"}
